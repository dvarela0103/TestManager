/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/

package com.tm.ui;
import com.tm.db.DatosApp;
import com.tm.db.DatosUsuarios;
import com.tm.logica.LogicaApp;
import com.tm.logica.LogicaReportes;
import com.tm.logica.LogicaTest;
import com.tm.logica.LogicaTipos;
import com.tm.logica.LogicaUsuarios;
import java.sql.Date;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Iterator;
import javax.swing.Icon;
import javax.swing.JOptionPane;
import org.omg.PortableInterceptor.SYSTEM_EXCEPTION;

public class Inicio extends javax.swing.JFrame {
    LogicaUsuarios logusu;
    LogicaTipos logtipo;
    LogicaTest logtest;
    LogicaReportes logrepo;
Integer id;
        Integer foranea1,foranea2,enteroid;
    /**
     * Creates new form Inicio
     */
    public Inicio() {
        initComponents();
        logusu=new LogicaUsuarios();
        logtipo=new LogicaTipos();
        logtest=new LogicaTest();
        logrepo=new LogicaReportes();
        iconcheck.setVisible(false);
        RBusu.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Dtablas = new javax.swing.JDialog();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaUsuarios = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaTipo = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        TablaTest = new javax.swing.JTable();
        jLabel29 = new javax.swing.JLabel();
        BGtablas = new javax.swing.ButtonGroup();
        tab = new javax.swing.JTabbedPane();
        Bienvenida = new javax.swing.JPanel();
        bien1 = new javax.swing.JLabel();
        bien2 = new javax.swing.JLabel();
        bien3 = new javax.swing.JLabel();
        iconcolor = new javax.swing.JLabel();
        iconcheck = new javax.swing.JLabel();
        rep = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        RBusu = new javax.swing.JRadioButton();
        RBtipo = new javax.swing.JRadioButton();
        RBtest = new javax.swing.JRadioButton();
        jLabel20 = new javax.swing.JLabel();
        Tconid = new javax.swing.JTextField();
        Bconind = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        Tablaid = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        BConsUs = new javax.swing.JButton();
        Tipos = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Tidtipo = new javax.swing.JTextField();
        Tnomtipo = new javax.swing.JTextField();
        Tdestipo = new javax.swing.JTextField();
        Batipo = new javax.swing.JButton();
        Bmtipo = new javax.swing.JButton();
        Betipo = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        limpiarti = new javax.swing.JButton();
        usr = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Tidusua = new javax.swing.JTextField();
        Tusua = new javax.swing.JTextField();
        Tconusua = new javax.swing.JTextField();
        Tnomusua = new javax.swing.JTextField();
        Bausua = new javax.swing.JButton();
        Bmusua = new javax.swing.JButton();
        Beusua = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        limpiaru = new javax.swing.JButton();
        test = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        Tidtest = new javax.swing.JTextField();
        Tnomtest = new javax.swing.JTextField();
        Testtest = new javax.swing.JTextField();
        Batest = new javax.swing.JButton();
        Betest = new javax.swing.JButton();
        Bmtest = new javax.swing.JButton();
        fecha = new javax.swing.JLabel();
        Combotipo = new javax.swing.JComboBox();
        ComboUser = new javax.swing.JComboBox();
        jLabel28 = new javax.swing.JLabel();
        limpiarte = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        users = new javax.swing.JComboBox();
        jLabel23 = new javax.swing.JLabel();
        activo = new javax.swing.JToggleButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();

        Dtablas.setMinimumSize(new java.awt.Dimension(700, 500));

        jLabel14.setText("Tabla de datos de Usuarios:");

        TablaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"45", null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(TablaUsuarios);

        jScrollPane4.setViewportView(jScrollPane1);

        jLabel15.setText("Tabla de datos Tipos de test:");

        TablaTipo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(TablaTipo);

        jScrollPane5.setViewportView(jScrollPane2);

        jLabel16.setText("Tabla de datos Tests:");

        TablaTest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(TablaTest);

        jScrollPane6.setViewportView(jScrollPane3);

        jLabel29.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(153, 0, 153));
        jLabel29.setText("ESTOS DATOS SE ACTUALIZAN EN TIEMPO REAL PARA QUE TENGA MAS FACILIDAD AL TRABAJAR.");

        org.jdesktop.layout.GroupLayout DtablasLayout = new org.jdesktop.layout.GroupLayout(Dtablas.getContentPane());
        Dtablas.getContentPane().setLayout(DtablasLayout);
        DtablasLayout.setHorizontalGroup(
            DtablasLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane4)
            .add(jScrollPane5)
            .add(jScrollPane6)
            .add(DtablasLayout.createSequentialGroup()
                .add(DtablasLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel15)
                    .add(jLabel16))
                .add(0, 0, Short.MAX_VALUE))
            .add(DtablasLayout.createSequentialGroup()
                .add(DtablasLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel14)
                    .add(jLabel29))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        DtablasLayout.setVerticalGroup(
            DtablasLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, DtablasLayout.createSequentialGroup()
                .add(jLabel29)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 7, Short.MAX_VALUE)
                .add(jLabel14)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 116, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel15)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 122, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel16)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 115, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Test Manager");
        setBackground(new java.awt.Color(255, 102, 51));
        setForeground(new java.awt.Color(255, 153, 153));
        setMinimumSize(new java.awt.Dimension(460, 520));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        tab.setEnabled(false);
        tab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabMouseClicked(evt);
            }
        });

        Bienvenida.setBackground(new java.awt.Color(255, 255, 255));
        Bienvenida.setLayout(null);

        bien1.setText("Bienvenido al Sistema de Pruebas");
        Bienvenida.add(bien1);
        bien1.setBounds(70, 20, 200, 29);

        bien2.setText("Porfavor ingrese sus datos para ");
        Bienvenida.add(bien2);
        bien2.setBounds(70, 40, 210, 20);

        bien3.setText("confirmar que es un usuario registrado");
        Bienvenida.add(bien3);
        bien3.setBounds(70, 50, 260, 29);

        iconcolor.setBackground(new java.awt.Color(204, 204, 204));
        iconcolor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/tm/design/framely.gif"))); // NOI18N
        Bienvenida.add(iconcolor);
        iconcolor.setBounds(30, 30, 320, 320);

        iconcheck.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/tm/design/success-icon.png"))); // NOI18N
        Bienvenida.add(iconcheck);
        iconcheck.setBounds(150, 0, 440, 320);

        tab.addTab("", new javax.swing.ImageIcon(getClass().getResource("/com/tm/design/welcome-icon.png")), Bienvenida); // NOI18N

        rep.setBackground(new java.awt.Color(102, 0, 153));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(0, 0, 0), new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)), "Consulta por ID", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 1, 10))); // NOI18N

        jLabel21.setText("Tabla:");
        jLabel21.setToolTipText("Seleccione uno");

        BGtablas.add(RBusu);
        RBusu.setText("Usuarios");
        RBusu.setToolTipText("Seleccione uno");

        BGtablas.add(RBtipo);
        RBtipo.setText("Tipo de Test");
        RBtipo.setToolTipText("Seleccione uno");

        BGtablas.add(RBtest);
        RBtest.setText("Test");
        RBtest.setToolTipText("Seleccione uno");

        jLabel20.setText("ID :");

        Tconid.setToolTipText("Ingrese valor");
        Tconid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TconidKeyTyped(evt);
            }
        });

        Bconind.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/tm/design/Actions-edit-find-icon.png"))); // NOI18N
        Bconind.setToolTipText("Presione para consultar");
        Bconind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BconindActionPerformed(evt);
            }
        });

        Tablaid.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane7.setViewportView(Tablaid);

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jLabel21)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(RBusu)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(RBtipo)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(RBtest)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                        .add(jLabel20)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(Tconid, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(25, 25, 25)))
                .add(Bconind)
                .add(0, 53, Short.MAX_VALUE))
            .add(jScrollPane7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel21)
                            .add(RBusu)
                            .add(RBtipo)
                            .add(RBtest))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel20)
                            .add(Tconid, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(Bconind, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jScrollPane7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(51, 51, 51), new java.awt.Color(0, 0, 204), null, null), "Consulta General", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 1, 10))); // NOI18N

        jLabel19.setText("Para consultar todos los datos y todas las tablas:");

        BConsUs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/tm/design/Actions-edit-find-icon.png"))); // NOI18N
        BConsUs.setText("Consultar Todos");
        BConsUs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BConsUsActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel19)
                    .add(BConsUs, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 224, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .add(jLabel19)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(BConsUs, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        org.jdesktop.layout.GroupLayout repLayout = new org.jdesktop.layout.GroupLayout(rep);
        rep.setLayout(repLayout);
        repLayout.setHorizontalGroup(
            repLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(repLayout.createSequentialGroup()
                .add(repLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(0, 106, Short.MAX_VALUE))
        );
        repLayout.setVerticalGroup(
            repLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(repLayout.createSequentialGroup()
                .add(6, 6, 6)
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 139, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(147, Short.MAX_VALUE))
        );

        tab.addTab("", new javax.swing.ImageIcon(getClass().getResource("/com/tm/design/Inventory-icon.png")), rep); // NOI18N

        Tipos.setBackground(new java.awt.Color(255, 51, 51));

        jLabel5.setText("ID :");

        jLabel6.setText("Nombre: ");

        jLabel7.setText("Descripción:");

        Tidtipo.setToolTipText("ID tipo");
        Tidtipo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TidtipoKeyTyped(evt);
            }
        });

        Tnomtipo.setToolTipText("Nombre de tipo");

        Tdestipo.setToolTipText("Describa");

        Batipo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/tm/design/add-1-icon.png"))); // NOI18N
        Batipo.setToolTipText("Agregar");
        Batipo.setContentAreaFilled(false);
        Batipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BatipoActionPerformed(evt);
            }
        });

        Bmtipo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/tm/design/Time-Machine-icon.png"))); // NOI18N
        Bmtipo.setToolTipText("Modificar");
        Bmtipo.setContentAreaFilled(false);
        Bmtipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BmtipoActionPerformed(evt);
            }
        });

        Betipo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/tm/design/Delete-icon.png"))); // NOI18N
        Betipo.setToolTipText("Eliminar");
        Betipo.setContentAreaFilled(false);
        Betipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BetipoActionPerformed(evt);
            }
        });

        jLabel26.setText("Ingrese los datos de Tipos de Tests:");

        limpiarti.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/tm/design/Actions-edit-clear-icon.png"))); // NOI18N
        limpiarti.setContentAreaFilled(false);
        limpiarti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiartiActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout TiposLayout = new org.jdesktop.layout.GroupLayout(Tipos);
        Tipos.setLayout(TiposLayout);
        TiposLayout.setHorizontalGroup(
            TiposLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(TiposLayout.createSequentialGroup()
                .add(TiposLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel26)
                    .add(TiposLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, TiposLayout.createSequentialGroup()
                            .add(21, 21, 21)
                            .add(TiposLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                .add(jLabel7)
                                .add(jLabel6)
                                .add(jLabel5))
                            .add(18, 18, 18)
                            .add(TiposLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(Tidtipo)
                                .add(Tnomtipo)
                                .add(Tdestipo, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE))
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(limpiarti, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 57, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(org.jdesktop.layout.GroupLayout.LEADING, TiposLayout.createSequentialGroup()
                            .add(57, 57, 57)
                            .add(Batipo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 79, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(Bmtipo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(Betipo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 64, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(228, Short.MAX_VALUE))
        );
        TiposLayout.setVerticalGroup(
            TiposLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(TiposLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel26)
                .add(21, 21, 21)
                .add(TiposLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(limpiarti)
                    .add(TiposLayout.createSequentialGroup()
                        .add(TiposLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel5)
                            .add(Tidtipo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(TiposLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel6)
                            .add(Tnomtipo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(TiposLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel7)
                            .add(Tdestipo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(15, 15, 15)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(TiposLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(Batipo)
                    .add(TiposLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                        .add(Betipo)
                        .add(Bmtipo)))
                .addContainerGap(188, Short.MAX_VALUE))
        );

        tab.addTab("", new javax.swing.ImageIcon(getClass().getResource("/com/tm/design/question-type-one-correct-icon.png")), Tipos); // NOI18N

        usr.setBackground(new java.awt.Color(51, 204, 0));

        jLabel1.setText("ID :");

        jLabel2.setText("Contraseña:");

        jLabel3.setText("Usuario :");

        jLabel4.setText("Nombre :");

        Tidusua.setColumns(2);
        Tidusua.setToolTipText("deben ser números");
        Tidusua.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        Tidusua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TidusuaKeyTyped(evt);
            }
        });

        Tusua.setToolTipText("maximo 8");
        Tusua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TusuaKeyTyped(evt);
            }
        });

        Tconusua.setToolTipText("maximo 8");
        Tconusua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TconusuaKeyTyped(evt);
            }
        });

        Tnomusua.setToolTipText("Nombre completo");

        Bausua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/tm/design/add-1-icon.png"))); // NOI18N
        Bausua.setToolTipText("Agregar");
        Bausua.setContentAreaFilled(false);
        Bausua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BausuaActionPerformed(evt);
            }
        });

        Bmusua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/tm/design/Time-Machine-icon.png"))); // NOI18N
        Bmusua.setToolTipText("Modificar");
        Bmusua.setContentAreaFilled(false);
        Bmusua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BmusuaActionPerformed(evt);
            }
        });

        Beusua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/tm/design/Delete-icon.png"))); // NOI18N
        Beusua.setToolTipText("Eliminar");
        Beusua.setContentAreaFilled(false);
        Beusua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BeusuaActionPerformed(evt);
            }
        });

        jLabel27.setText("Ingrese los datos de Usuario:");

        limpiaru.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/tm/design/Actions-edit-clear-icon.png"))); // NOI18N
        limpiaru.setContentAreaFilled(false);
        limpiaru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiaruActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout usrLayout = new org.jdesktop.layout.GroupLayout(usr);
        usr.setLayout(usrLayout);
        usrLayout.setHorizontalGroup(
            usrLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(usrLayout.createSequentialGroup()
                .add(32, 32, 32)
                .add(usrLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel27)
                    .add(usrLayout.createSequentialGroup()
                        .add(usrLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(usrLayout.createSequentialGroup()
                                .add(88, 88, 88)
                                .add(Bausua, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 69, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(Bmusua, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 67, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(usrLayout.createSequentialGroup()
                                .add(usrLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                                    .add(jLabel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(jLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .add(18, 18, 18)
                                .add(usrLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(Tidusua, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 105, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(Tusua, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 105, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(Tnomusua, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 105, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(Tconusua, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 105, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                        .add(18, 18, 18)
                        .add(usrLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(Beusua, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 69, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(limpiaru, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 58, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(166, Short.MAX_VALUE))
        );
        usrLayout.setVerticalGroup(
            usrLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(usrLayout.createSequentialGroup()
                .add(usrLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(usrLayout.createSequentialGroup()
                        .add(jLabel27)
                        .add(11, 11, 11)
                        .add(usrLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel1)
                            .add(Tidusua, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(usrLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel3)
                            .add(Tusua, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(9, 9, 9)
                        .add(usrLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel2)
                            .add(Tconusua, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(usrLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel4)
                            .add(Tnomusua, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(usrLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(Bmusua)
                            .add(Bausua)))
                    .add(usrLayout.createSequentialGroup()
                        .add(limpiaru)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(Beusua)))
                .addContainerGap(183, Short.MAX_VALUE))
        );

        tab.addTab("", new javax.swing.ImageIcon(getClass().getResource("/com/tm/design/Users-icon.png")), usr); // NOI18N

        test.setBackground(new java.awt.Color(0, 153, 153));

        jLabel8.setText("ID:");

        jLabel9.setText("Fecha:");

        jLabel10.setText("Nombre:");

        jLabel11.setText("ID Tipo:");

        jLabel12.setText("ID Users:");

        jLabel13.setText("Estado:");

        Tidtest.setToolTipText("Solo números");
        Tidtest.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TidtestKeyTyped(evt);
            }
        });

        Tnomtest.setToolTipText("Ingrese nombre del test");

        Testtest.setToolTipText("Ingrese tipo de estado");

        Batest.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/tm/design/add-1-icon.png"))); // NOI18N
        Batest.setToolTipText("Agregar");
        Batest.setContentAreaFilled(false);
        Batest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BatestActionPerformed(evt);
            }
        });

        Betest.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/tm/design/Delete-icon.png"))); // NOI18N
        Betest.setToolTipText("Eliminar");
        Betest.setContentAreaFilled(false);
        Betest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BetestActionPerformed(evt);
            }
        });

        Bmtest.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/tm/design/Time-Machine-icon.png"))); // NOI18N
        Bmtest.setToolTipText("Modificar");
        Bmtest.setContentAreaFilled(false);
        Bmtest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BmtestActionPerformed(evt);
            }
        });

        Combotipo.setToolTipText("Elija ID tipo");
        Combotipo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                CombotipoFocusGained(evt);
            }
        });

        ComboUser.setToolTipText("Elija ID Usuario");
        ComboUser.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ComboUserFocusGained(evt);
            }
        });

        jLabel28.setText("Ingrese los datos de Test:");

        limpiarte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/tm/design/Actions-edit-clear-icon.png"))); // NOI18N
        limpiarte.setContentAreaFilled(false);
        limpiarte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarteActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout testLayout = new org.jdesktop.layout.GroupLayout(test);
        test.setLayout(testLayout);
        testLayout.setHorizontalGroup(
            testLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(testLayout.createSequentialGroup()
                .add(testLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(testLayout.createSequentialGroup()
                        .add(21, 21, 21)
                        .add(jLabel28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(testLayout.createSequentialGroup()
                        .add(21, 21, 21)
                        .add(testLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(testLayout.createSequentialGroup()
                                .add(jLabel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(testLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(testLayout.createSequentialGroup()
                                        .add(154, 154, 154)
                                        .add(limpiarte, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(fecha, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 179, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                    .add(testLayout.createSequentialGroup()
                        .add(21, 21, 21)
                        .add(testLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(testLayout.createSequentialGroup()
                                .add(jLabel13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 46, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(Testtest, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 113, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jLabel12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(testLayout.createSequentialGroup()
                                .add(55, 55, 55)
                                .add(testLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(Combotipo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 113, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(ComboUser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 113, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(Tnomtest, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 113, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                    .add(testLayout.createSequentialGroup()
                        .add(21, 21, 21)
                        .add(jLabel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(Tidtest, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 111, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(testLayout.createSequentialGroup()
                        .add(67, 67, 67)
                        .add(Batest, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 72, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(Bmtest, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 64, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(Betest, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 62, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(15, 238, Short.MAX_VALUE))
        );
        testLayout.setVerticalGroup(
            testLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(testLayout.createSequentialGroup()
                .add(jLabel28)
                .add(4, 4, 4)
                .add(testLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel8)
                    .add(Tidtest, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(8, 8, 8)
                .add(testLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(testLayout.createSequentialGroup()
                        .add(22, 22, 22)
                        .add(testLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel10)
                            .add(Tnomtest, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(testLayout.createSequentialGroup()
                        .add(14, 14, 14)
                        .add(limpiarte, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 64, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jLabel9)
                    .add(testLayout.createSequentialGroup()
                        .add(2, 2, 2)
                        .add(fecha, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(testLayout.createSequentialGroup()
                        .add(67, 67, 67)
                        .add(testLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel11)
                            .add(Combotipo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .add(6, 6, 6)
                .add(testLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(ComboUser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel12))
                .add(7, 7, 7)
                .add(testLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(Testtest, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel13))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(testLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(Batest)
                    .add(Bmtest)
                    .add(Betest))
                .addContainerGap())
        );

        tab.addTab("", new javax.swing.ImageIcon(getClass().getResource("/com/tm/design/tests-icon.png")), test); // NOI18N

        getContentPane().add(tab);
        tab.setBounds(0, 100, 520, 491);

        users.setEnabled(false);

        jLabel23.setText("Escoja su Nombre de Usuario:");

        activo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/tm/design/Lock-Lock-icon.png"))); // NOI18N
        activo.setContentAreaFilled(false);
        activo.setEnabled(false);
        activo.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/com/tm/design/Lock-Lock-icon.png"))); // NOI18N
        activo.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/com/tm/design/Lock-Unlock-icon.png"))); // NOI18N
        activo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                activoMouseClicked(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jLabel23, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(users, 0, 184, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(activo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 76, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(92, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jLabel23)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(users, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(jPanel1Layout.createSequentialGroup()
                .add(0, 0, Short.MAX_VALUE)
                .add(activo))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 0, 368, 80);

        jLabel17.setText("Tests");
        getContentPane().add(jLabel17);
        jLabel17.setBounds(350, 80, 52, 20);

        jLabel18.setText("Bienvenido");
        getContentPane().add(jLabel18);
        jLabel18.setBounds(10, 80, 80, 20);

        jLabel22.setText("Reportes");
        getContentPane().add(jLabel22);
        jLabel22.setBounds(100, 80, 70, 20);

        jLabel24.setText("Tipos");
        getContentPane().add(jLabel24);
        jLabel24.setBounds(180, 80, 52, 20);

        jLabel25.setText("Usuarios");
        getContentPane().add(jLabel25);
        jLabel25.setBounds(260, 80, 52, 20);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        // TODO add your handling code here:
      
        
        
        //Validacion de Conectividad con LA BASE DE DATOS
      
      List usuarios = new ArrayList ();
      
      
      if (logicaApp.verificarConexion()){
          
          users.setEnabled(true);
          activo.setEnabled(true);
          users.addItem("Elija un usuario...");  
          
          //Cargando los usuarios desde la BD
          
          usuarios=logicaApp.cargarUsuarios();         
          Iterator iterator = usuarios.iterator();
          
          while (iterator.hasNext()){
              users.addItem(iterator.next());
          } 
          /////Finaliza carga de usuarios
          
      }else{
          Object[] ops = {"No","Si"};
          
          JOptionPane.showMessageDialog(rootPane,"La conexión a la base de datos falló","DB Error",JOptionPane.ERROR_MESSAGE);
          int op = JOptionPane.showOptionDialog(rootPane,"¿Desea Configurar la conexión a la base de datos?","DB Config",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE,null,ops,ops[1]);
          
          if (op!=1){
              JOptionPane.showMessageDialog(rootPane,"Test Manager no puede continuar, reinicie la aplicación","DB Error",JOptionPane.ERROR_MESSAGE);              
          }else{              
              String dbHost=JOptionPane.showInputDialog(rootPane,"Indique el host o IP donde se encuentra la base de datos","localhost");
              logicaApp.setDbHost(dbHost);
              String dbPort=JOptionPane.showInputDialog(rootPane,"Indique el puerto de la base de datos","3306");
              logicaApp.setDbPort(Integer.parseInt(dbPort));
              String dbUser=JOptionPane.showInputDialog(rootPane,"Indique el usuario de la base de datos","root");
              logicaApp.setDbUser(dbUser);
              String dbPass=JOptionPane.showInputDialog(rootPane,"Indique el password de la base de datos","root");
              logicaApp.setDbPass(dbPass);
              
              
              if (logicaApp.configurarConexion()){
                    users.setEnabled(true);
                    activo.setEnabled(true);
                    users.addItem("Elija un usuario...");      

                   //Cargando los usuarios desde la BD
          
                    usuarios=logicaApp.cargarUsuarios();         
                    Iterator iterator = usuarios.iterator();
          
                    while (iterator.hasNext()){
                        users.addItem(iterator.next());
                     } 
                    /////Finaliza carga de usuarios                    
                    
              }else{
                  JOptionPane.showMessageDialog(rootPane,"La conexión a la base de datos falló","DB Error",JOptionPane.ERROR_MESSAGE);
                  JOptionPane.showMessageDialog(rootPane,"Test Manager no puede continuar, reinicie la aplicación","DB Error",JOptionPane.ERROR_MESSAGE);                                         
              }
          }          
      }                
    }//GEN-LAST:event_formWindowOpened

    private void activoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_activoMouseClicked
        // TODO add your handling code here:
        List usuarios = new ArrayList ();
      
        if (!(activo.isSelected()) && !(users.isEnabled())){
            tab.setEnabled(false);
            users.setEnabled(true);
            users.setSelectedIndex(0);
           // TablaUsuarios.setModel(null);
            Dtablas.dispose();
            JOptionPane.showMessageDialog(rootPane,"Sesión Finalizada","Acceso Finalizado",JOptionPane.INFORMATION_MESSAGE);
             //Cargando los usuarios desde la BD
                   
                    users.removeAllItems();
                     users.addItem("Elija un usuario...");
                    usuarios=logicaApp.cargarUsuarios();         
                    Iterator iterator = usuarios.iterator();
          
                    while (iterator.hasNext()){
                        users.addItem(iterator.next());
                     } 
                    /////Finaliza carga de usuarios 
                    //Luego muestra los datos de bienvenida
            tab.setSelectedIndex(0);
            iconcolor.setVisible(true);
            bien1.setText("Bienvenido al Sistema de Pruebas");
                bien2.setText("Porfavor ingrese sus datos para");
                bien3.setText("confirmar que es un usuario registrado");
        }else{
        
            boolean acceso=false;
            String qaPass = JOptionPane.showInputDialog(rootPane, "Digite la clave de acceso para el usuario " + users.getSelectedItem(),"password" );
        
            acceso=logicaApp.revisarAcceso(users.getSelectedItem().toString(),qaPass);
        
             if (acceso) {
                tab.setEnabled(true);    
                users.setEnabled(false);
                logrepo.ReporteUsuarios(TablaUsuarios);
                //si es usuario registrado correctamente muestra los datos
                bien1.setText("Bienvenido "+users.getSelectedItem());
                bien2.setText("Ahora puedes utlizar el sistema");
                bien3.setText("");
                iconcolor.setVisible(false);
                iconcheck.setVisible(true);
             }else{
                JOptionPane.showMessageDialog(rootPane,"La clave es incorrecta","Acceso Incorrecto",JOptionPane.ERROR_MESSAGE);
                users.setSelectedIndex(0);
                activo.setSelected(false);
                users.setEnabled(true);
             }
        } 
     
    }//GEN-LAST:event_activoMouseClicked

    private void BausuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BausuaActionPerformed
        // TODO add your handling code here:
        //Este metodo agrega un nuevo usuario
        if(validarcamposU()){
               id=Integer.parseInt(Tidusua.getText());
        //usuario o id de usuario no se pueden repetir
        if(logusu.ValidarNoUsuario(Tusua.getText())==true||logusu.ValidarIdUser(id)==true){
            JOptionPane.showMessageDialog(null, "El usuario ya existe","Existe",JOptionPane.ERROR_MESSAGE);}
       
        else{
                logusu.RAgregar(id,Tusua.getText(), Tconusua.getText(),Tnomusua.getText());
                logrepo.ReporteUsuarios(TablaUsuarios);
        JOptionPane.showMessageDialog(null, "Usuario Agregado Exitosamente","Agregado",JOptionPane.INFORMATION_MESSAGE);}
                
    }else{
        JOptionPane.showMessageDialog(null,"Todos los campos son requeridos","Campos Vacios",JOptionPane.ERROR_MESSAGE);
        }
        limpiarcamposU();
    }//GEN-LAST:event_BausuaActionPerformed

    private void TidusuaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TidusuaKeyTyped
        //solo acepta 9 digitos para no execeder el rango de un int
        if (Tidusua.getText().length()==9) evt.consume();  
        //solo aceptar numeros
        char aux;
        aux=evt.getKeyChar();
        if(aux<'0'||aux>'9'){
        evt.consume();
        //if (Tidusua.getText().length()==9) evt.consume();
        } 
    }//GEN-LAST:event_TidusuaKeyTyped

    private void BeusuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BeusuaActionPerformed
        // TODO add your handling code here:
        //elimina el usuario
        if(!Tidusua.getText().equals("")){
            id=Integer.parseInt(Tidusua.getText());
            
        Object checkus = users.getSelectedItem();
        String checku = String.valueOf(checkus);
        int op;
        //compueba si existe:
           if(logusu.ValidarIdUser(id)==true){
               //Comprueba que no este activo:
               if(logusu.ValidarUsuarioActivo(checku,id)==true){
               JOptionPane.showMessageDialog(null, "Usuario Activo!\nNo se puede eliminar","Eliminar",JOptionPane.ERROR_MESSAGE);
               }
               else{
                   //advertencia al eliminar usuario afecta a test
         op=JOptionPane.showConfirmDialog(null, "SI elimina este usuario\n"
                 + " eliminara todos los\n"
                 + "los test asociados\n ¿Desea continuar?","Eliminar",JOptionPane.YES_NO_OPTION);
           if(op==0){
           logusu.REliminar(id);
           logrepo.ReporteUsuarios(TablaUsuarios);
           JOptionPane.showMessageDialog(null, "Usuario Eliminado Exitosamente","Eliminado",JOptionPane.INFORMATION_MESSAGE);}}}
           else{
               
              JOptionPane.showMessageDialog(null, "No Existe Usuario con Ese ID\nIngrese un Dato Válido","No existe",JOptionPane.ERROR_MESSAGE);
           }
         
        }else{
               
              JOptionPane.showMessageDialog(null, "Espacio de ID vacio","Vacio",JOptionPane.ERROR_MESSAGE);
           }
        limpiarcamposU();
    }//GEN-LAST:event_BeusuaActionPerformed

    private void BmusuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BmusuaActionPerformed
        // TODO add your handling code here:
        //modifica usuarios
        if(validarcamposU())
        {
        id=Integer.parseInt(Tidusua.getText());
        Object checkus = users.getSelectedItem();
        String checku = String.valueOf(checkus);
       //verifica si existe:
                if(logusu.ValidarIdUser(id)==true)
                {
                    //verifica que si esta activo
                     if(logusu.ValidarUsuarioActivo(checku, id)==true)
                     {
                JOptionPane.showMessageDialog(null,"Usario Activo\nNo se puede Modificar","Activo", JOptionPane.ERROR_MESSAGE);
                     }else
                     {
        logusu.RModificar(id,Tusua.getText(), Tconusua.getText(),Tnomusua.getText());
        logrepo.ReporteUsuarios(TablaUsuarios);
                JOptionPane.showMessageDialog(null,"Usario modificado existosamente\n","Modificado", JOptionPane.INFORMATION_MESSAGE);
                     }
                }else{
                    JOptionPane.showMessageDialog(null,"No Existe ese usuario\n"
                + "Digite un valor válido","No existe", JOptionPane.ERROR_MESSAGE);
                }
                
           }else
        {
        JOptionPane.showMessageDialog(null,"Todos los campos son requeridos\n"
                + "favor completar para modificar","Campos Vacios",JOptionPane.ERROR_MESSAGE);
        }
        limpiarcamposU();
    }//GEN-LAST:event_BmusuaActionPerformed

    private void BatipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BatipoActionPerformed
        // TODO add your handling code here:
         //agrega tipo
        if(validarcamposTi()){
            
        id=Integer.parseInt(Tidtipo.getText());
        //verifica si ya existe
        if(logtipo.ValidarIdtipo(id)==true){
            JOptionPane.showMessageDialog(null, "El ID tipo ya existe","Existe",JOptionPane.ERROR_MESSAGE);
    }else{
        logtipo.RAgregar(id,Tnomtipo.getText(), Tdestipo.getText());
        logrepo.ReporteTipos(TablaTipo);
        
        JOptionPane.showMessageDialog(null, "Tipo Agregado Exitosamente","Agregado",JOptionPane.INFORMATION_MESSAGE);
        }  
    }else{
        JOptionPane.showMessageDialog(null,"Todos los campos son requeridos","Campos Vacios",JOptionPane.ERROR_MESSAGE);
        }
        limpiarcamposTi();
    }//GEN-LAST:event_BatipoActionPerformed

    private void BmtipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BmtipoActionPerformed
        // TODO add your handling code here:
        //modifica tipos
        if(validarcamposTi()){
        id=Integer.parseInt(Tidtipo.getText());
        //verifica que exista
            if(logtipo.ValidarIdtipo(id)==true){
                logtipo.RModificar(id,Tnomtipo.getText(), Tdestipo.getText());
                logrepo.ReporteTipos(TablaTipo);
                JOptionPane.showMessageDialog(null,"Tipo Modificado Exitosamente","Modificado", JOptionPane.INFORMATION_MESSAGE);
            
            }else{ 
                JOptionPane.showMessageDialog(null, "No Existe \nIngrese un Tipo de test"
                        + "válido","NoExiste",JOptionPane.ERROR_MESSAGE);
        }
        }else{
        JOptionPane.showMessageDialog(null,"Todos los campos son requeridos\n"
                + "favor completar para modificar","Campos Vacios",JOptionPane.ERROR_MESSAGE);
        }
        limpiarcamposTi();
    }//GEN-LAST:event_BmtipoActionPerformed

    private void BetipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BetipoActionPerformed
        // TODO add your handling code here:
        //elimina tipos
        if(!Tidtipo.getText().equals("")){
        id=Integer.parseInt(Tidtipo.getText());
        //verifica si esta utilizado en test
        if(logtipo.NoEliminartipo(id)==true){
            JOptionPane.showMessageDialog(null, "El ID tipo esta\n"
                    + "siendo utilizado favor \n"
                    + "modificar el ID tipo\n"
                    + "en Test","Utilizado",JOptionPane.ERROR_MESSAGE);
    }else{   
            if(logtipo.ValidarIdtipo(id)==true){
        logtipo.REliminar(id);
        logrepo.ReporteTipos(TablaTipo);
            JOptionPane.showMessageDialog(null,"Tipo Eliminado exitosamente","Eliminado", JOptionPane.INFORMATION_MESSAGE);}
            else{
            JOptionPane.showMessageDialog(null,"No Existe ese Tipo","No existe", JOptionPane.ERROR_MESSAGE);}
    }  }else{
        JOptionPane.showMessageDialog(null,"Id Vacio favor\n"
                + "llenar espacio","Vacio", JOptionPane.ERROR_MESSAGE);
        }
        limpiarcamposTi();
    }//GEN-LAST:event_BetipoActionPerformed

    private void BatestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BatestActionPerformed
        // TODO add your handling code here:
        //Agregar test
        if(validarcamposTe()){
        id=Integer.parseInt(Tidtest.getText());
        //obtengo el tipo seleccionado
        Object tipo=Combotipo.getSelectedItem();
        int ctipo=(int)tipo;
        foranea1=ctipo;
        //obtengo el usuario seleccionado
        Object tipo1=ComboUser.getSelectedItem();
        int ctipo1=(int)tipo1;
        foranea2=ctipo1;
        //verifica si ya existe
     if(logtest.ValidarIdtest(id)==true){
            JOptionPane.showMessageDialog(null, "El ID test esta\n"
                    + "en la base de datos","Existe",JOptionPane.ERROR_MESSAGE);
    }else{   
        logtest.RAgregar(id,fecha.getText(),Tnomtest.getText(),foranea1,foranea2,Testtest.getText());
        logrepo.ReporteTests(TablaTest);
    JOptionPane.showMessageDialog(null,"Test Agregado Exitosamente","Agregado",JOptionPane.INFORMATION_MESSAGE);
     }}else{
        JOptionPane.showMessageDialog(null,"Todos los campos son requeridos","Campos Vacios",JOptionPane.ERROR_MESSAGE);
        }
        limpiarcamposTe();
    }//GEN-LAST:event_BatestActionPerformed

    private void BmtestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BmtestActionPerformed
        // TODO add your handling code here:
        //Modificar test
        if(validarcamposTe()){
            Object tipo=Combotipo.getSelectedItem();
        int ctipo=(int)tipo;
        foranea1=ctipo;
        Object tipo1=ComboUser.getSelectedItem();
        int ctipo1=(int)tipo1;
        foranea2=ctipo1;
        id=Integer.parseInt(Tidtest.getText());
        //verifica si existe
        if(logtest.ValidarIdtest(id)==true){
        logtest.RModificar(id,fecha.getText(),Tnomtest.getText(),foranea1,foranea2,Testtest.getText());
        logrepo.ReporteTests(TablaTest);
    JOptionPane.showMessageDialog(null,"Test Modificado Exitosamente","Modificado",JOptionPane.INFORMATION_MESSAGE);
        }
        else{
        JOptionPane.showMessageDialog(null,"Test no existe","No existe",JOptionPane.ERROR_MESSAGE);}}else{
        JOptionPane.showMessageDialog(null,"Todos los campos son requeridos\n"
                + "favor completar para modificar","Campos Vacios",JOptionPane.ERROR_MESSAGE);
        }
        limpiarcamposTe();
    }//GEN-LAST:event_BmtestActionPerformed

    private void BetestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BetestActionPerformed
        // TODO add your handling code here:
        //eliminar test
        if(!Tidtest.getText().equals("")){
         id=Integer.parseInt(Tidtest.getText()); 
         if(logtest.ValidarIdtest(id)==true){
         logtest.REliminar(id);
         logrepo.ReporteTests(TablaTest);
         JOptionPane.showMessageDialog(null,"Test eliminado exitosamente","Eliminado",JOptionPane.INFORMATION_MESSAGE);}
         else{
         JOptionPane.showMessageDialog(null,"No existe ese Test","No existe",JOptionPane.ERROR_MESSAGE);}
         }else{
        JOptionPane.showMessageDialog(null,"Id Vacio favor\n"
                + "llenar espacio","Vacio", JOptionPane.ERROR_MESSAGE);
        }
        limpiarcamposTe();
    }//GEN-LAST:event_BetestActionPerformed

    private void TusuaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TusuaKeyTyped
        // TODO add your handling code here:
        //usuario de 8 elementos
        if (Tusua.getText().length()==8) evt.consume();
        
    }//GEN-LAST:event_TusuaKeyTyped

    private void TconusuaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TconusuaKeyTyped
        // TODO add your handling code here:
        //contrasenna de 8 elementos
        if (Tconusua.getText().length()==8) evt.consume();
    }//GEN-LAST:event_TconusuaKeyTyped

    private void TidtestKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TidtestKeyTyped
        // TODO add your handling code here:
        //id de 9 digitos para que no exceda el rango de un int
        if (Tidtest.getText().length()==9) evt.consume();
        //solo acepta numeros
        char aux;
        aux=evt.getKeyChar();
        if(aux<'0'||aux>'9'){
        evt.consume();
        }
    }//GEN-LAST:event_TidtestKeyTyped

    private void TidtipoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TidtipoKeyTyped
        // TODO add your handling code here:
        if (Tidtipo.getText().length()==9) evt.consume();
        char aux;
        aux=evt.getKeyChar();
        if(aux<'0'||aux>'9'){
        evt.consume();
        }
    }//GEN-LAST:event_TidtipoKeyTyped

    private void CombotipoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CombotipoFocusGained
        // TODO add your handling code here:
        //cargo todos los tipos al combobox
        logtipo.ComboTipo(Combotipo);
        
    }//GEN-LAST:event_CombotipoFocusGained

    private void ComboUserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ComboUserFocusGained
        // TODO add your handling code here:
        //cargo todos los usuarios al combobox
        logusu.ComboUsu(ComboUser);
        
    }//GEN-LAST:event_ComboUserFocusGained

    private void BConsUsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BConsUsActionPerformed
        // TODO add your handling code here
        //cargo los datos a las tablas
        Dtablas.setLocationRelativeTo(null);
        Dtablas.setVisible(true);
        logrepo.ReporteUsuarios(TablaUsuarios);
        logrepo.ReporteTipos(TablaTipo);
        logrepo.ReporteTests(TablaTest);
    }//GEN-LAST:event_BConsUsActionPerformed

    private void BconindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BconindActionPerformed
        // TODO add your handling code here:
        //consulta por id 
        if(Tconid.getText().isEmpty()){JOptionPane.showMessageDialog(null, "Debe Ingresar algún dato","Vacío",JOptionPane.ERROR_MESSAGE);}
        else{
        if(RBusu.isSelected())
        {   enteroid=Integer.parseInt(Tconid.getText());
            if(logrepo.ReporteIdUsuario(Tablaid, enteroid)==false){
            JOptionPane.showMessageDialog(null, "No Existe","No Existe",JOptionPane.ERROR_MESSAGE);};
        // Tconid.setText("");
        }
        //consulta tipo
        if(RBtipo.isSelected())
        {
            
                enteroid=Integer.parseInt(Tconid.getText());
                if(logrepo.ReporteIdTipo(Tablaid, enteroid)==false){
                    JOptionPane.showMessageDialog(null, "No Existe","No Existe",JOptionPane.ERROR_MESSAGE);}
        }
            //Consulta test
            if(RBtest.isSelected())
            {
                
                    enteroid=Integer.parseInt(Tconid.getText());
                    if(logrepo.ReporteIdTest(Tablaid, enteroid)==false){
                        JOptionPane.showMessageDialog(null, "No Existe","No Existe",JOptionPane.ERROR_MESSAGE);}
            }
        }
                //
                Tconid.setText("");
                //

    }//GEN-LAST:event_BconindActionPerformed

    private void limpiartiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiartiActionPerformed
        // TODO add your handling code here:
        limpiarcamposTi();
    }//GEN-LAST:event_limpiartiActionPerformed

    private void limpiaruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiaruActionPerformed
        limpiarcamposU();
    }//GEN-LAST:event_limpiaruActionPerformed

    private void limpiarteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarteActionPerformed
        // TODO add your handling code here:
        limpiarcamposTe();
    }//GEN-LAST:event_limpiarteActionPerformed

    private void tabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabMouseClicked
        // TODO add your handling code here:
        if(tab.getSelectedIndex()==4){Fecha();}
    }//GEN-LAST:event_tabMouseClicked

    private void TconidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TconidKeyTyped
        // TODO add your handling code here:
         if (Tconid.getText().length()==9) evt.consume();
        char aux;
        aux=evt.getKeyChar();
        if(aux<'0'||aux>'9'){
        evt.consume();
        }
    }//GEN-LAST:event_TconidKeyTyped
//Los metodos ValidarCampos se utilizan para que no se genere un error si hay campos
    //vacios a la hora de ingresar datos
    public boolean validarcamposTi(){
    if (Tidtipo.getText().trim().equals("")){return false;}
    if (Tnomtipo.getText().trim().equals("")){return false;}
    if (Tdestipo.getText().trim().equals("")){return false;}
    return true;
    }
  //Limpiar se utilizan para limpiar los JTextfield
    public void limpiarcamposTi() {
        Tidtipo.setText("");
        Tnomtipo.setText("");
        Tdestipo.setText("");
    }
    
    public boolean validarcamposU(){
    if (Tidusua.getText().trim().equals("")){return false;}
    if (Tusua.getText().trim().equals("")){return false;}
    if (Tconusua.getText().trim().equals("")){return false;}
    if (Tnomusua.getText().trim().equals("")){return false;}
    return true;
    }
    
    public void limpiarcamposU() {
        Tidusua.setText("");
        Tusua.setText("");
        Tconusua.setText("");
        Tnomusua.setText("");
    }
    public boolean validarcamposTe(){
    if (Tidtest.getText().trim().equals("")){return false;}
    if (Tnomtest.getText().trim().equals("")){return false;}
    if (Combotipo.getSelectedIndex()==-1){return false;}
    if (ComboUser.getSelectedIndex()==-1){return false;}
    if (Testtest.getText().trim().equals("")){return false;}
    return true;
    }
    
    public void limpiarcamposTe() {
        Tidtest.setText("");
        Tnomtest.setText("");
        Combotipo.removeAllItems();
        ComboUser.removeAllItems();
        Testtest.setText("");
    }
    //obtener la fecha completa con hora
    public void Fecha()
    { Calendar cal=Calendar.getInstance();
        SimpleDateFormat ahora=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
        cal.add(Calendar.YEAR,0);
        String time1=ahora.format(cal.getTime());
        fecha.setText(time1);
        
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new Inicio().setVisible(true);
                 
                
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BConsUs;
    private javax.swing.ButtonGroup BGtablas;
    private javax.swing.JButton Batest;
    private javax.swing.JButton Batipo;
    private javax.swing.JButton Bausua;
    private javax.swing.JButton Bconind;
    private javax.swing.JButton Betest;
    private javax.swing.JButton Betipo;
    private javax.swing.JButton Beusua;
    private javax.swing.JPanel Bienvenida;
    private javax.swing.JButton Bmtest;
    private javax.swing.JButton Bmtipo;
    private javax.swing.JButton Bmusua;
    private javax.swing.JComboBox ComboUser;
    private javax.swing.JComboBox Combotipo;
    private javax.swing.JDialog Dtablas;
    private javax.swing.JRadioButton RBtest;
    private javax.swing.JRadioButton RBtipo;
    private javax.swing.JRadioButton RBusu;
    private javax.swing.JTable TablaTest;
    private javax.swing.JTable TablaTipo;
    private javax.swing.JTable TablaUsuarios;
    private javax.swing.JTable Tablaid;
    private javax.swing.JTextField Tconid;
    private javax.swing.JTextField Tconusua;
    private javax.swing.JTextField Tdestipo;
    private javax.swing.JTextField Testtest;
    private javax.swing.JTextField Tidtest;
    private javax.swing.JTextField Tidtipo;
    private javax.swing.JTextField Tidusua;
    private javax.swing.JPanel Tipos;
    private javax.swing.JTextField Tnomtest;
    private javax.swing.JTextField Tnomtipo;
    private javax.swing.JTextField Tnomusua;
    private javax.swing.JTextField Tusua;
    private javax.swing.JToggleButton activo;
    private javax.swing.JLabel bien1;
    private javax.swing.JLabel bien2;
    private javax.swing.JLabel bien3;
    private javax.swing.JLabel fecha;
    private javax.swing.JLabel iconcheck;
    private javax.swing.JLabel iconcolor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JButton limpiarte;
    private javax.swing.JButton limpiarti;
    private javax.swing.JButton limpiaru;
    private javax.swing.JPanel rep;
    private javax.swing.JTabbedPane tab;
    private javax.swing.JPanel test;
    private javax.swing.JComboBox users;
    private javax.swing.JPanel usr;
    // End of variables declaration//GEN-END:variables
    private LogicaApp logicaApp = new LogicaApp (); //declaracion de la clase que representa la capa de logica de negocios
}
